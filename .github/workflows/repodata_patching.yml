name: repodata_patching

on:
  schedule:
    - cron: '0 0 * * 0'
  workflow_dispatch: null

jobs:
  repodata_patching:
    runs-on: ubuntu-latest
    steps:
      - name: Prevent multiple jobs running in parallel
        id: conversion_lock
        uses: beckermr/turnstyle-python@8f1ceb87dabbbbebe42257b85c368f6110bb9170 # v2
        with:
          abort-after-seconds: 3
          poll-interval-seconds: 2
          github-token: ${{ secrets.GITHUB_TOKEN }}
        continue-on-error: true

      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        # outcome is evaluated before continue-on-error above
        if: steps.conversion_lock.outcome == 'success'

      - uses: conda-incubator/setup-miniconda@835234971496cad1653abb28a638a281cf32541f # v3.2.0
        if: steps.conversion_lock.outcome == 'success'
        with:
          activate-environment: cf
          environment-file: environment.yml
          auto-activate-base: true
          miniforge-version: latest

      - name: Generate token
        if: steps.conversion_lock.outcome == 'success'
        id: generate_token
        uses: actions/create-github-app-token@67018539274d69449ef7c02e8e71183d1719ab42 # v1
        with:
          app-id: ${{ secrets.CF_CURATOR_APP_ID }}
          private-key: ${{ secrets.CF_CURATOR_PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}

      - name: patch repodata
        if: steps.conversion_lock.outcome == 'success'
        shell: bash -l {0}
        run: |
          conda activate cf
          git config --global user.email "79913779+conda-forge-curator[bot]@users.noreply.github.com"
          git config --global user.name "conda-forge-curator[bot]"
          git config --global pull.rebase false
          python scripts/update_repodata_patches.py
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
